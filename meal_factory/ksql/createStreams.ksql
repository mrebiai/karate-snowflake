-- Create input streams
CREATE STREAM potato_input (
    `key` STRING key,
    `value` STRING
) WITH (
    KAFKA_TOPIC='potato',
    VALUE_FORMAT='JSON',
    PARTITIONS=1
);

CREATE STREAM bread_input (
    `key` STRING key,
    `value` STRING
) WITH (
    KAFKA_TOPIC='bread',
    VALUE_FORMAT='JSON',
    PARTITIONS=1
);

CREATE STREAM meat_input (
    `key` STRING key,
    `value` STRING
) WITH (
    KAFKA_TOPIC='meat',
    VALUE_FORMAT='JSON',
    PARTITIONS=1
);

CREATE STREAM vegetable_input (
    `key` STRING key,
    `value` STRING
) WITH (
    KAFKA_TOPIC='vegetable',
    VALUE_FORMAT='JSON',
    PARTITIONS=1
);

-- Create output streams
CREATE STREAM side_dishes_output WITH (
    KAFKA_TOPIC='side-dishes',
    VALUE_FORMAT='JSON',
    PARTITIONS=1
) AS
SELECT 
    `key`,
    AS_VALUE(`key`) AS `clientId`,
    CASE 
        WHEN `value` = 'ü•î' THEN 'üçü'
        ELSE `value`
    END AS `processedFood`
FROM potato_input
WHERE `value` IS NOT NULL
EMIT CHANGES;


CREATE STREAM burger_output WITH (
    KAFKA_TOPIC='burger',
    VALUE_FORMAT='JSON',
    PARTITIONS=1
) AS
SELECT 
    bread.`key` AS `key`,
    AS_VALUE(bread.`key`) AS `clientId`,
    CASE 
        WHEN bread.`value` IN ('üçû', 'ü•ñ') AND meat.`value` IN ('ü•©', 'üçó', 'üêü') AND vegetable.`value` IN ('üçÖ', 'ü•¨') THEN 'üçî'
        ELSE concat(bread.`value`, ' + ', meat.`value`, ' + ', vegetable.`value`)
    END AS `processedFood`,
    bread.`value` AS `breadValue`,
    meat.`value` AS `meatValue`,
    vegetable.`value` AS `vegetableValue`
FROM bread_input bread
JOIN meat_input meat
    WITHIN 5 MINUTES
    ON bread.`key` = meat.`key`
JOIN vegetable_input vegetable
    WITHIN 5 MINUTES
    ON bread.`key` = vegetable.`key`
WHERE bread.`value` IS NOT NULL
  AND meat.`value` IS NOT NULL
  AND vegetable.`value` IS NOT NULL
EMIT CHANGES;

CREATE STREAM meal_output WITH (
    KAFKA_TOPIC='meal',
    VALUE_FORMAT='JSON',
    PARTITIONS=1
) AS
SELECT 
    burger.`key` AS `key`,
    burger.`clientId` AS `clientId`,
    burger.`processedFood` AS `burger`,
    side_dishes.`processedFood` AS `sideDishes`
FROM burger_output burger
JOIN side_dishes_output side_dishes
    WITHIN 5 MINUTES
    ON burger.`key` = side_dishes.`key`
WHERE burger.`processedFood` IS NOT NULL
  AND side_dishes.`processedFood` IS NOT NULL
EMIT CHANGES;

